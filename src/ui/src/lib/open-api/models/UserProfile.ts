/* tslint:disable */
/* eslint-disable */
/**
 * Swagger - OpenAPI 3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nikita@ttnr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    email: string;
    /**
     * Role to change to
     * @type {string}
     * @memberof UserProfile
     */
    role: UserProfileRoleEnum;
    /**
     * Unique identifier for the user
     * @type {string}
     * @memberof UserProfile
     */
    id?: string;
}


/**
 * @export
 */
export const UserProfileRoleEnum = {
    Admin: 'admin',
    User: 'user',
    Unverified: 'unverified'
} as const;
export type UserProfileRoleEnum = typeof UserProfileRoleEnum[keyof typeof UserProfileRoleEnum];


/**
 * Check if a given object implements the UserProfile interface.
 */
export function instanceOfUserProfile(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "role" in value;

    return isInstance;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'role': json['role'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function UserProfileToJSON(value?: UserProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'role': value.role,
        'id': value.id,
    };
}

