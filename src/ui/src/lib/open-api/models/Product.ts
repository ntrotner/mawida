/* tslint:disable */
/* eslint-disable */
/**
 * Swagger - OpenAPI 3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nikita@ttnr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductDocumentsInner } from './ProductDocumentsInner';
import {
    ProductDocumentsInnerFromJSON,
    ProductDocumentsInnerFromJSONTyped,
    ProductDocumentsInnerToJSON,
} from './ProductDocumentsInner';
import type { ProductImagesInner } from './ProductImagesInner';
import {
    ProductImagesInnerFromJSON,
    ProductImagesInnerFromJSONTyped,
    ProductImagesInnerToJSON,
} from './ProductImagesInner';
import type { ProductPricing } from './ProductPricing';
import {
    ProductPricingFromJSON,
    ProductPricingFromJSONTyped,
    ProductPricingToJSON,
} from './ProductPricing';

/**
 * 
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * Unique identifier for the product
     * @type {string}
     * @memberof Product
     */
    id?: string;
    /**
     * Name of the product
     * @type {string}
     * @memberof Product
     */
    name: string;
    /**
     * Description of the product
     * @type {string}
     * @memberof Product
     */
    description: string;
    /**
     * List of base64 encoded image data with IDs and names
     * @type {Array<ProductImagesInner>}
     * @memberof Product
     */
    images?: Array<ProductImagesInner>;
    /**
     * List of base64 encoded document data with IDs and names
     * @type {Array<ProductDocumentsInner>}
     * @memberof Product
     */
    documents?: Array<ProductDocumentsInner>;
    /**
     * Location ID of the product
     * @type {string}
     * @memberof Product
     */
    location: string;
    /**
     * 
     * @type {ProductPricing}
     * @memberof Product
     */
    pricing: ProductPricing;
    /**
     * Dynamic attributes for the product
     * @type {{ [key: string]: any; }}
     * @memberof Product
     */
    dynamicAttributes?: { [key: string]: any; };
}

/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "location" in value;
    isInstance = isInstance && "pricing" in value;

    return isInstance;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'],
        'images': !exists(json, 'images') ? undefined : ((json['images'] as Array<any>).map(ProductImagesInnerFromJSON)),
        'documents': !exists(json, 'documents') ? undefined : ((json['documents'] as Array<any>).map(ProductDocumentsInnerFromJSON)),
        'location': json['location'],
        'pricing': ProductPricingFromJSON(json['pricing']),
        'dynamicAttributes': !exists(json, 'dynamicAttributes') ? undefined : json['dynamicAttributes'],
    };
}

export function ProductToJSON(value?: Product | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'images': value.images === undefined ? undefined : ((value.images as Array<any>).map(ProductImagesInnerToJSON)),
        'documents': value.documents === undefined ? undefined : ((value.documents as Array<any>).map(ProductDocumentsInnerToJSON)),
        'location': value.location,
        'pricing': ProductPricingToJSON(value.pricing),
        'dynamicAttributes': value.dynamicAttributes,
    };
}

