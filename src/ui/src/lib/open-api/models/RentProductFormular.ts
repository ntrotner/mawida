/* tslint:disable */
/* eslint-disable */
/**
 * Swagger - OpenAPI 3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: nikita@ttnr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PaymentMethod } from './PaymentMethod';
import {
    PaymentMethodFromJSON,
    PaymentMethodFromJSONTyped,
    PaymentMethodToJSON,
} from './PaymentMethod';

/**
 * 
 * @export
 * @interface RentProductFormular
 */
export interface RentProductFormular {
    /**
     * Unix timestamp for the start date of the rental period
     * @type {number}
     * @memberof RentProductFormular
     */
    rentalStartDate: number;
    /**
     * Unix timestamp for the end date of the rental period
     * @type {number}
     * @memberof RentProductFormular
     */
    rentalEndDate: number;
    /**
     * Free text for additional notes or special instructions
     * @type {string}
     * @memberof RentProductFormular
     */
    additionalNotes?: string;
    /**
     * Identifier for the location where the product will be picked up
     * @type {string}
     * @memberof RentProductFormular
     */
    locationId: string;
    /**
     * 
     * @type {PaymentMethod}
     * @memberof RentProductFormular
     */
    paymentMethodId: PaymentMethod;
    /**
     * Dynamic attributes for the rental request
     * @type {{ [key: string]: any; }}
     * @memberof RentProductFormular
     */
    dynamicAttributes?: { [key: string]: any; };
}

/**
 * Check if a given object implements the RentProductFormular interface.
 */
export function instanceOfRentProductFormular(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rentalStartDate" in value;
    isInstance = isInstance && "rentalEndDate" in value;
    isInstance = isInstance && "locationId" in value;
    isInstance = isInstance && "paymentMethodId" in value;

    return isInstance;
}

export function RentProductFormularFromJSON(json: any): RentProductFormular {
    return RentProductFormularFromJSONTyped(json, false);
}

export function RentProductFormularFromJSONTyped(json: any, ignoreDiscriminator: boolean): RentProductFormular {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rentalStartDate': json['rentalStartDate'],
        'rentalEndDate': json['rentalEndDate'],
        'additionalNotes': !exists(json, 'additionalNotes') ? undefined : json['additionalNotes'],
        'locationId': json['locationId'],
        'paymentMethodId': PaymentMethodFromJSON(json['paymentMethodId']),
        'dynamicAttributes': !exists(json, 'dynamicAttributes') ? undefined : json['dynamicAttributes'],
    };
}

export function RentProductFormularToJSON(value?: RentProductFormular | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rentalStartDate': value.rentalStartDate,
        'rentalEndDate': value.rentalEndDate,
        'additionalNotes': value.additionalNotes,
        'locationId': value.locationId,
        'paymentMethodId': PaymentMethodToJSON(value.paymentMethodId),
        'dynamicAttributes': value.dynamicAttributes,
    };
}

