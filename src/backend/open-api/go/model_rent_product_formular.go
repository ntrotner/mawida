/*
 * Swagger - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: nikita@ttnr.me
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import "template_backend/common"

type RentProductFormular struct {

	// Unique identifier for the user renting the product
	UserId string `json:"userId" validate:"required,uuid"`

	// The start date of the rental period
	RentalStartDate string `json:"rentalStartDate" validate:"required"`

	// The end date of the rental period
	RentalEndDate string `json:"rentalEndDate" validate:"required"`

	// Free text for additional notes or special instructions
	AdditionalNotes string `json:"additionalNotes,omitempty" validate:"omitempty,max=1000"`

	// Identifier for the location where the product will be picked up
	LocationId string `json:"locationId" validate:"required"`

	// Identifier for the payment method used for the rental
	PaymentMethodId string `json:"paymentMethodId"`

	// Dynamic attributes for the rental request
	DynamicAttributes map[string]interface{} `json:"dynamicAttributes,omitempty"`
}

// AssertRentProductFormularRequired checks if the required fields are not zero-ed
func AssertRentProductFormularRequired(obj RentProductFormular) error {
	elements := map[string]interface{}{
		"userId":          obj.UserId,
		"rentalStartDate": obj.RentalStartDate,
		"rentalEndDate":   obj.RentalEndDate,
		"locationId":      obj.LocationId,
		"paymentMethodId": obj.PaymentMethodId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRentProductFormularConstraints checks if the values respects the defined constraints
func AssertRentProductFormularConstraints(obj RentProductFormular) error {
	return common.Validate.Struct(obj)
}
