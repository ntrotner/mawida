/*
 * Swagger - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: nikita@ttnr.me
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import "template_backend/common"

type Location struct {

	// Unique identifier for the location
	Id string `json:"id,omitempty"`

	// City where the product is located
	City string `json:"city,omitempty" validate:"required,min=2,max=100"`

	// Street address of the product location
	Street string `json:"street,omitempty" validate:"required,min=2,max=200"`

	// Postal code of the product location
	PostalCode string `json:"postalCode,omitempty" validate:"required,min=4,max=10"`

	// Name of the building
	BuildingName string `json:"buildingName,omitempty" validate:"omitempty,min=2,max=100"`

	Coordinates LocationCoordinates `json:"coordinates,omitempty" validate:"required"`
}

// AssertLocationRequired checks if the required fields are not zero-ed
func AssertLocationRequired(obj Location) error {
	elements := map[string]interface{}{
		"id":          obj.Id,
		"city":        obj.City,
		"street":      obj.Street,
		"postalCode":  obj.PostalCode,
		"coordinates": obj.Coordinates,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertLocationCoordinatesRequired(obj.Coordinates); err != nil {
		return err
	}
	return nil
}

// AssertLocationConstraints checks if the values respects the defined constraints
func AssertLocationConstraints(obj Location) error {
	return common.Validate.Struct(obj)
}
