/*
 * Swagger - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: nikita@ttnr.me
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"fmt"
)

// RentContractStatus : Status of the rent contract
type RentContractStatus string

// List of RentContractStatus
const (
	PICKUP_PENDING RentContractStatus = "pickupPending"
	CONFIRMED      RentContractStatus = "confirmed"
	ACTIVE         RentContractStatus = "active"
	COMPLETED      RentContractStatus = "completed"
	CANCELLED      RentContractStatus = "cancelled"
)

// AllowedRentContractStatusEnumValues is all the allowed values of RentContractStatus enum
var AllowedRentContractStatusEnumValues = []RentContractStatus{
	"pickupPending",
	"confirmed",
	"active",
	"completed",
	"cancelled",
}

// validRentContractStatusEnumValue provides a map of RentContractStatuss for fast verification of use input
var validRentContractStatusEnumValues = map[RentContractStatus]struct{}{
	"pickupPending": {},
	"confirmed":     {},
	"active":        {},
	"completed":     {},
	"cancelled":     {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RentContractStatus) IsValid() bool {
	_, ok := validRentContractStatusEnumValues[v]
	return ok
}

// NewRentContractStatusFromValue returns a pointer to a valid RentContractStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRentContractStatusFromValue(v string) (RentContractStatus, error) {
	ev := RentContractStatus(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for RentContractStatus: valid values are %v", v, AllowedRentContractStatusEnumValues)
	}
}

// AssertRentContractStatusRequired checks if the required fields are not zero-ed
func AssertRentContractStatusRequired(obj RentContractStatus) error {
	return nil
}

// AssertRentContractStatusConstraints checks if the values respects the defined constraints
func AssertRentContractStatusConstraints(obj RentContractStatus) error {
	return nil
}
